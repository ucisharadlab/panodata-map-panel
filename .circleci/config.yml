version: 2.1
jobs:
  build_plugin:
    docker:
    - image: circleci/node:14
    working_directory: ~/plugin
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install yarn
        command: yarn install --pure-lockfile
    - run:
        name: Run Toolkit Build
        command: npx grafana-toolkit plugin:ci-build
    - run:
        name: Move Build Result to Ci Folder
        command: npx grafana-toolkit plugin:ci-build --finish
    - save_cache:
        paths:
        - node_modules
        key: yarn-packages-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
        - ci
  build_docs:
    docker:
    - image: circleci/node:14
    working_directory: ~/plugin
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install yarn
        command: |
          yarn install --pure-lockfile
          mkdir ci # Avoid error if not exists
    - run:
        name: Build Docs
        command: npx grafana-toolkit plugin:ci-docs
    - save_cache:
        paths:
        - node_modules
        key: yarn-packages-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
        - ci
  build_osx:
    docker:
    - image: circleci/node:14
    working_directory: ~/plugin
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install yarn
        command: |
          sudo npm install -g yarn --quiet --force
          yarn install --pure-lockfile
    - run:
        name: Run Toolkit CI
        command: npx grafana-toolkit plugin:ci-build --backend osx
    - save_cache:
        paths:
        - node_modules
        key: yarn-packages-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/build_osx
  build_win64:
    docker:
    - image: circleci/node:14
    working_directory: ~/plugin
    steps:
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install yarn
        command: |
          sudo npm install -g yarn --quiet --force
          yarn install --pure-lockfile
    - run:
        name: Run Toolkit CI
        command: npx grafana-toolkit plugin:ci-build --backend win64
    - save_cache:
        paths:
        - node_modules
        key: yarn-packages-{{ checksum "yarn.lock" }}
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/build_win64
  package:
    docker:
    - image: circleci/node:14
    working_directory: ~/plugin
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Package Distribution
        command: npx grafana-toolkit plugin:ci-package
    - persist_to_workspace:
        root: .
        paths:
        - ci/jobs/package
        - ci/packages
        - ci/dist
        - ci/grafana-test-env
    - store_artifacts:
        path: ci/packages
  test_6_7_4:
    docker:
      - image: circleci/node:14-browsers
    working_directory: ~/plugin
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Setup Grafana (local install)
          command: |
            wget https://dl.grafana.com/oss/release/grafana_6.7.4_amd64.deb
            sudo apt-get install -y adduser libfontconfig1
            sudo dpkg -i grafana_6.7.4_amd64.deb
            sudo apt-get install locate
            sudo updatedb
            sudo locate grafana
            sudo cat /etc/grafana/grafana.ini
            sudo echo ------------------------
            sudo cp ci/grafana-test-env/custom.ini /usr/share/grafana/conf/custom.ini
            sudo cp ci/grafana-test-env/custom.ini /etc/grafana/grafana.ini
            sudo service grafana-server start
            sudo grafana-cli --version
      - run:
          name: Run e2e tests
          command: |
            npx grafana-toolkit plugin:ci-test
      - persist_to_workspace:
          root: .
          paths:
            - ci/jobs/test_6_7_4
      - store_test_results:
          path: ci/jobs/test_6_7_4
      - store_artifacts:
          path: ci/jobs/test_6_7_4
  test_7_2_2:
    docker:
      - image: circleci/node:14-browsers
    working_directory: ~/plugin
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Setup Grafana (local install)
          command: |
            wget https://dl.grafana.com/oss/release/grafana_7.2.2_amd64.deb
            sudo apt-get install -y adduser libfontconfig1
            sudo dpkg -i grafana_7.2.2_amd64.deb
            sudo apt-get install locate
            sudo updatedb
            sudo locate grafana
            sudo cat /etc/grafana/grafana.ini
            sudo echo ------------------------
            sudo cp ci/grafana-test-env/custom.ini /usr/share/grafana/conf/custom.ini
            sudo cp ci/grafana-test-env/custom.ini /etc/grafana/grafana.ini
            sudo service grafana-server start
            sudo grafana-cli --version
      - run:
          name: Run e2e tests
          command: |
            npx grafana-toolkit plugin:ci-test
      - persist_to_workspace:
          root: .
          paths:
            - ci/jobs/test_7_2_2
      - store_test_results:
          path: ci/jobs/test_7_2_2
      - store_artifacts:
          path: ci/jobs/test_7_2_2
  report:
    docker:
    - image: circleci/node:14
    working_directory: ~/plugin
    steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Toolkit Report
        command: npx grafana-toolkit plugin:ci-report
    - store_artifacts:
        path: ci
workflows:
  version: 2
  plugin_workflow:
    jobs:
    - build_plugin
    - build_docs
    - package:
        requires:
        - build_plugin
        - build_docs
#    - test_6_7_4:
#        requires:
#          - package
#    - test_7_2_2:
#        requires:
#          - package
    - report:
        requires:
#        - test_6_7_4
#        - test_7_2_2
         - package
